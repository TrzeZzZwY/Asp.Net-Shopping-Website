@model IEnumerable<ShoppingCartItemDbo>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@if (@Model.Count() == 0)
{
    <p>Nie masz jeszcze nic w swoim koszyku</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Zdjęcie
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ItemName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ItemPrice)
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @if (String.IsNullOrEmpty(item.ItemImageName))
                        {
                            <img width="150" height="150" src="~/image/noimage.jpg" asp-append-version="true" />
                        }
                        else
                        {
                            <img width="150" height="150" src="@("~/image/"+item.ItemImageName)" asp-append-version="true" />
                        }
                    </td>
                    <td>
                        @item.ItemName
                    </td>
                    <td>
                        @if (item.ItemDiscount == 0)
                        {
                           <span> @(item.ItemPrice)zł</span>
                        }
                        else
                        {
                            <span style='color:red;text-decoration:line-through'>
                                <span style='color:black'>
                                   <span> @item.ItemPrice zł</span>
                                </span>
                            </span>
                            <span> &nbsp;@(Math.Round(item.ItemPrice - item.ItemPrice * item.ItemDiscount / 100,2)) zł</span>
                        }
                    </td>
                    <td>
                        <a class="btn btn-danger" onclick="RemoveItemFromCart('@item.CustomerShoppingCartItemId')">usuń</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <p>suma = @Model.Sum(e=>e.ItemDiscount == 0 ? e.ItemPrice:Math.Round(e.ItemPrice - e.ItemPrice * e.ItemDiscount / 100,2));
     </p>
    <a class="btn btn-primary" onclick="BuyAllInCart()">Zapłać</a>
    <script>
        function RemoveItemFromCart(str) {
          var request = new XMLHttpRequest();
          request.onreadystatechange = function() {
          };
          var url = "/Cart/RemoveFromShoppingCart";
          request.open("POST", url, false);
          request.setRequestHeader("Content-Type", "application/json");
          request.onreadystatechange = function () {
            if (request.readyState == 4 && request.status == 200) {
                location.reload(true);
            }
          };
        request.send(JSON.stringify(str));
        location.reload(true);
        }

         function BuyAllInCart() {
          var request = new XMLHttpRequest();
          request.onreadystatechange = function() {
          };
          var url = "/Cart/BuyAllInCart";
          request.open("POST", url, false);
          request.setRequestHeader("Content-Type", "application/json");
          request.onreadystatechange = function () {
            if (request.readyState == 4 && request.status == 200) {
                location.reload(true);
            }
          };
        request.send(JSON.stringify());
        location.reload(true);
        }
    </script>
}
@if (TempData["Bought"] != null)
{
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    @if (((string)TempData["Bought"]) == "Success")
    {
        <script type="text/javascript">
                    toastr.options = {
              "closeButton": false,
              "debug": false,
              "newestOnTop": false,
              "progressBar": false,
              "positionClass": "toast-bottom-right",
              "preventDuplicates": false,
              "onclick": null,
              "showDuration": "300",
              "hideDuration": "5000",
              "timeOut": "3000",
              "extendedTimeOut": "1000",
              "showEasing": "swing",
              "hideEasing": "linear",
              "showMethod": "fadeIn",
              "hideMethod": "fadeOut"
            }
                   toastr.info('Dziękujemy za zakupy')
        </script>
    }
    @if (((string)TempData["Bought"]) == "Fail")
    {
        <script type="text/javascript">
                    toastr.options = {
              "closeButton": false,
              "debug": false,
              "newestOnTop": false,
              "progressBar": false,
              "positionClass": "toast-bottom-right",
              "preventDuplicates": false,
              "onclick": null,
              "showDuration": "300",
              "hideDuration": "5000",
              "timeOut": "3000",
              "extendedTimeOut": "1000",
              "showEasing": "swing",
              "hideEasing": "linear",
              "showMethod": "fadeIn",
              "hideMethod": "fadeOut"
            }
                   toastr.warning('Nie udało się kupić')
        </script>
    }
}
@if (TempData["RemovedFromCart"] != null)
{
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    @if (((string)TempData["RemovedFromCart"]) == "Success")
    {
        <script type="text/javascript">
                    toastr.options = {
              "closeButton": false,
              "debug": false,
              "newestOnTop": false,
              "progressBar": false,
              "positionClass": "toast-bottom-right",
              "preventDuplicates": false,
              "onclick": null,
              "showDuration": "300",
              "hideDuration": "5000",
              "timeOut": "3000",
              "extendedTimeOut": "1000",
              "showEasing": "swing",
              "hideEasing": "linear",
              "showMethod": "fadeIn",
              "hideMethod": "fadeOut"
            }
                   toastr.info('Usunięto z koszyka')
        </script>
    }
    @if (((string)TempData["RemovedFromCart"]) == "Fail")
    {
        <script type="text/javascript">
                    toastr.options = {
              "closeButton": false,
              "debug": false,
              "newestOnTop": false,
              "progressBar": false,
              "positionClass": "toast-bottom-right",
              "preventDuplicates": false,
              "onclick": null,
              "showDuration": "300",
              "hideDuration": "5000",
              "timeOut": "3000",
              "extendedTimeOut": "1000",
              "showEasing": "swing",
              "hideEasing": "linear",
              "showMethod": "fadeIn",
              "hideMethod": "fadeOut"
            }
                   toastr.warning('Nie udało się usunąć z koszyka')
        </script>
    }
}
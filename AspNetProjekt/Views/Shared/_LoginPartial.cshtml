@using AspNetProjekt.Areas.Identity.Data
@using AspNetProjekt.Services
@using Microsoft.AspNetCore.Identity

@inject SignInManager<MyUser> SignInManager
@inject UserManager<MyUser> UserManager
@inject IdentityContext _context

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
         int itemsCount = _context.customerShoppingCart_Items
                        .Where(e => e.CustomerShoppingCart == _context.CustomersShoppingCarts
                              .Find(Guid.Parse(UserManager.GetUserId(User)))).ToList().Count;
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark btn btn-link btn-primary m-1"  asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Witaj @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark btn btn-link btn-primary m-1"  asp-controller="Cart" asp-action="MyCart"><i class="bi bi-cart-fill"></i>(@itemsCount)</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit"  class="nav-link btn btn-link text-dark btn-primary m-1">Wyloguj</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark btn btn-primary m-1"  id="register" asp-area="Identity" asp-page="/Account/Register">Rejestracja</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark btn btn-primary  m-1"  id="login" asp-area="Identity" asp-page="/Account/Login">Logowanie</a>
        </li>
    }
</ul>

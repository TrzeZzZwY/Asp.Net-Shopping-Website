@using AspNetProjekt.Models
@inject SignInManager<MyUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.TransactionsNavClass(ViewContext)" id="profile" asp-page="./Transactions">Twoje Tranzakcje</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.LikeItemNavClass(ViewContext)" id="profile" asp-page="./LikeItem">Twoje Polubienia</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.WishItemNavClass(ViewContext)" id="profile" asp-page="./WishItem">Twoja Lista Życzeń</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Zmień hasło</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
   <!-- <li class="nav-item"><a class="nav-link //ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li> -->
   <!-- <li class="nav-item"><a class="nav-link //ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li> -->
</ul>
